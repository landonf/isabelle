diff -ru 5.2.0/jEdit/org/gjt/sp/jedit/textarea/TextArea.java 5.2.0/jEdit-patched/org/gjt/sp/jedit/textarea/TextArea.java
--- 5.2.0/jEdit/org/gjt/sp/jedit/textarea/TextArea.java	2015-02-02 02:14:27.000000000 +0100
+++ 5.2.0/jEdit-patched/org/gjt/sp/jedit/textarea/TextArea.java	2015-02-28 20:55:21.140097595 +0100
@@ -1613,8 +1618,8 @@
 		}
 
 		// Scan backwards, trying to find a bracket
-		String openBrackets = "([{";
-		String closeBrackets = ")]}";
+		String openBrackets = "([{«‹⟨⌈⌊⦇⟦⦃";
+		String closeBrackets = ")]}»›⟩⌉⌋⦈⟧⦄'";
 		int count = 1;
 		char openBracket = '\0';
 		char closeBracket = '\0';
diff -ru 5.2.0/jEdit/org/gjt/sp/jedit/TextUtilities.java 5.2.0/jEdit-patched/org/gjt/sp/jedit/TextUtilities.java
--- 5.2.0/jEdit/org/gjt/sp/jedit/TextUtilities.java	2015-02-02 02:14:26.000000000 +0100
+++ 5.2.0/jEdit-patched/org/gjt/sp/jedit/TextUtilities.java	2015-02-28 20:53:50.167805688 +0100
@@ -97,6 +97,22 @@
 		case '}': if (direction != null) direction[0] = false; return '{';
 		case '<': if (direction != null) direction[0] = true;  return '>';
 		case '>': if (direction != null) direction[0] = false; return '<';
+		case '«': if (direction != null) direction[0] = true;  return '»';
+		case '»': if (direction != null) direction[0] = false; return '«';
+		case '‹': if (direction != null) direction[0] = true;  return '›';
+		case '›': if (direction != null) direction[0] = false; return '‹';
+		case '⟨': if (direction != null) direction[0] = true;  return '⟩';
+		case '⟩': if (direction != null) direction[0] = false; return '⟨';
+		case '⌈': if (direction != null) direction[0] = true;  return '⌉';
+		case '⌉': if (direction != null) direction[0] = false; return '⌈';
+		case '⌊': if (direction != null) direction[0] = true;  return '⌋';
+		case '⌋': if (direction != null) direction[0] = false; return '⌊';
+		case '⦇': if (direction != null) direction[0] = true;  return '⦈';
+		case '⦈': if (direction != null) direction[0] = false; return '⦇';
+		case '⟦': if (direction != null) direction[0] = true;  return '⟧';
+		case '⟧': if (direction != null) direction[0] = false; return '⟦';
+		case '⦃': if (direction != null) direction[0] = true;  return '⦄';
+		case '⦄': if (direction != null) direction[0] = false; return '⦃';
 		default:  return '\0';
 		}
 	} //}}}
